package com.company;
//////////////////////////////////////////////////////////////////////////////////////////
import java.io.*;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.*;
//////////////////////////////////////////////////////////////////////////////////////////
public class Main {
////90 percentile search//////////////////////////////////////////////////////////////////
    public static Float percentileDigit(ArrayList<Float> array){
        Collections.sort(array);
        Float x = (float)((array.size() - 1) * 0.9);
        int index = (int)(x / 1);
        Float r = (float)((x - index) % 1.00);
        r = new BigDecimal(r).setScale(2,
                RoundingMode.DOWN).floatValue();
        return new BigDecimal(index + r * (array.get(index + 1) -
                array.get(index))).setScale(2,
                RoundingMode.UP).floatValue();
    }
////Mediana search/////////////////////////////////////////////////////////////////////////
    public static Float medianaDigit(ArrayList<Float> array){
        Collections.sort(array);
        if(array.size() % 2 == 0){
            return (array.get(array.size() / 2) +
                    array.get(array.size() / 2 - 1)) / 2; }
        else{ return array.get((array.size() - 1) / 2); }
    }
////Maximum search//////////////////////////////////////////////////////////////////////////
    public static Float maxDigit(ArrayList<Float> array){
        Float max = (float)-32768.00;
        for(Float d : array){ if(d > max){ max = d; } }
        return max;
    }
////Minimum search///////////////////////////////////////////////////////////////////////////
    public static Float minDigit(ArrayList<Float> array){
        Float min = (float)32767.00;
        for(Float d : array){ if(d < min){ min = d; } }
        return min;
    }
////Average search///////////////////////////////////////////////////////////////////////////
    public static Float avgDigit(ArrayList<Float> array){
        float sum = (float)0.00;
        for(Float d : array){ sum += d; }
        return sum / (float)array.size();
    }
//////////////////////////////////////////////////////////////////////////////////////////////
    public static void main(String[] args) throws IOException {
	    Scanner sc = new Scanner(System.in);
        System.out.println("Enter file path and name");
        String file = sc.next();
        FileInputStream fis = new FileInputStream(file);
        BufferedReader bf = new BufferedReader(new InputStreamReader(fis));
        ArrayList<Float> digits = new ArrayList<Float>();
        String inputSym = "";
        while((inputSym = bf.readLine()) != null){
            digits.add(Float.parseFloat(inputSym));
        }
        System.out.format(Locale.US, "%.2f%n", percentileDigit(digits));
        System.out.format(Locale.US, "%.2f%n", medianaDigit(digits));
        System.out.format(Locale.US, "%.2f%n", maxDigit(digits));
        System.out.format(Locale.US, "%.2f%n", minDigit(digits));
        System.out.format(Locale.US, "%.2f%n" , avgDigit(digits));
    }
}
